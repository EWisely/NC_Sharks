#programs and versions
obitools version 2
obitools version 3
vsearch version v2.15.2_macos_x86_64
cutadapt 4.1 with Python 3.9.2
AdapterRemoval ver. 2.3.1
FastQC v0.11.9
multiqc, version 1.13
Swarm 3.0.0
Copyright (C) 2012-2019 Torbjorn Rognes and Frederic Mahe
https://github.com/torognes/swarm

Mahe F, Rognes T, Quince C, de Vargas C, Dunthorn M (2014)
Swarm: robust and fast clustering method for amplicon-based studies
PeerJ 2:e593 https://doi.org/10.7717/peerj.593

Mahe F, Rognes T, Quince C, de Vargas C, Dunthorn M (2015)
Swarm v2: highly-scalable and high-resolution amplicon clustering
PeerJ 3:e1420 https://doi.org/10.7717/peerj.1420

**************************************
#make Sample_list.txt (tab-delimited list of sample names NC1, St88-St89, etc. each one in its' own line)
dos2unix Sample_list.txt

#demultiplex MiFish and BerryCrust reads using Cutadapt and the BerryCrust and MiFish primers

cutadapt -e 0.15 --no-indels -g MiFish=GTCGGTAAAACTCGTGCCAGC -g BerryCrust=GGGACGATAAGACCCTATA -G MiFishUR=CATAGTGGGGTATCTAATCCCAGTTTG -G BerryCrustR=ATTACGCTGTTATCCCTAAAG -o St96-St97_R1_{name}.fastq -p St96-St97_R2_{name}.fastq St96-St97-J10_CGAAGAAC-TCGAGAGT_S157_L001_R1_001.fastq St96-St97-J10_CGAAGAAC-TCGAGAGT_S157_L001_R2_001.fastq

#Merge and trim with AdapterRemoval
while read line; do    
AdapterRemoval --threads 10 --file1 "../BerryCrust/""$line""_R1_BerryCrust.fastq" --file2 "../BerryCrust/""$line""_R2_BerryCrust.fastq" \
                    --collapse --trimns --trimqualities \
                    --minquality 20 \
                    --minalignmentlength 12 \
                    --basename "$line""_BerryCrust"; done < ../Sample_list.txt

while read line; do    
AdapterRemoval --threads 10 --file1 "../MiFish/""$line""_R1_MiFish.fastq" --file2 "../MiFish/""$line""_R2_MiFish.fastq" \
                    --collapse --trimns --trimqualities \
                    --minquality 20 \
                    --minalignmentlength 12 \
                    --basename "$line""_MiFish"; done < ../Sample_list.txt

#check for adapters and primers
mkdir ../01b_fastqc_merged_filtered
fastqc *.collapsed -o ../01b_fastqc_merged_filtered/
cd ../01b_fastqc_merged_filtered/
multiqc .


# I think they all need adapter removal done because the multiqc still says many of them have Nextera transposase adapter contamination.  The lengths look really good though.
# I checked some of the files of adapter contamination concern from fastqc/multiqc and both the MiFish and BerryCrust reads still have the forward PCR1 primer adapter TCGTCGGCAGCGTC and often followed by the 3' end of the illumina adapter AGATGTGTATAAGAGACAG hanging out on the ends of the reads.
      
# I used cutadapt again to clean the reads using the fwd and revcomp reads of each section of adapter applied in PCR1 and 2 other than the MiFish and BerryCrust primers      

while read line; do    
cutadapt --times 10 -b TCGTCGGCAGCGTC -b AGATGTGTATAAGAGACAG -b GTCTCGTGGGCTCGG -b AATGATACGGCGACCACCGAGATCTACAC -b CAAGCAGAAGACGGCATACGAGAT -b GACGCTGCCGACGA -b CTGTCTCTTATACACATCT -b CCGAGCCCACGAGAC -b GTGTAGATCTCGGTGGTCGCCGTATCATT -b ATCTCGTATGCCGTCTTCTGCTTG -o "../01c_cutadapt_merged_qualityfiltered/""$line""_BerryCrust.collapsed.AR" "$line""_BerryCrust.collapsed" ; done < ../Sample_list.txt

while read line; do    
cutadapt --times 10 -b TCGTCGGCAGCGTC -b AGATGTGTATAAGAGACAG -b GTCTCGTGGGCTCGG -b AATGATACGGCGACCACCGAGATCTACAC -b CAAGCAGAAGACGGCATACGAGAT -b GACGCTGCCGACGA -b CTGTCTCTTATACACATCT -b CCGAGCCCACGAGAC -b GTGTAGATCTCGGTGGTCGCCGTATCATT -b ATCTCGTATGCCGTCTTCTGCTTG -o "../01c_cutadapt_merged_qualityfiltered/""$line""_MiFish.collapsed.AR" "$line""_MiFish.collapsed" ; done < ../Sample_list.txt

#re-check for adapter contamination

cd ../01c_cutadapt_merged_qualityfiltered/
fastqc * -o ../01d_fastqc_merged_filtered_adapter_removed/
cd ../01d_fastqc_merged_filtered_adapter_removed
multiqc .

#Looks much better!


#Add Annotations

for file in *_BerryCrust.collapsed.AR; do
sample=${file#*dir/}
sample=${sample%_BerryCrust.collapsed.AR}
obiannotate -S sample:${sample} -S assay:BerryCrust --length ${sample}_BerryCrust.collapsed.AR > ${sample}_BerryCrust.collapsed.AR.annotated.fastq
done

for file in *_MiFish.collapsed.AR; do
sample=${file#*dir/}
sample=${sample%_MiFish.collapsed.AR}
obiannotate -S sample:${sample} -S assay:MiFish --length ${sample}_MiFish.collapsed.AR > ${sample}_MiFish.collapsed.AR.annotated.fastq
done

#Now I'd like to filter for sequences between 140-260 bp long (MiFish) or 100-260bp (BerryCrust).  Also keep quality over 20, maximum 0 Ns and 1 expected errors.
mkdir ../01e_trimmed_QF
mkdir ../01e_trimmed_QF/discards
while read line; do
cutadapt -q 20 --max-n 0 --max-ee 1 -m 100 -M 260 --too-short-output "../01e_trimmed_QF/discards/""$line""_BerryCrust.under100bp" --too-long-output "../01e_trimmed_QF/discards/""$line""_BerryCrust.over260bp" -o "../01e_trimmed_QF/""$line""_BerryCrust.final.annotated.fastq" "$line""_BerryCrust.collapsed.AR.annotated.fastq"; done < ../Sample_list.txt
while read line; do
cutadapt -q 20 --max-n 0 --max-ee 1 -m 140 -M 260 --too-short-output "../01e_trimmed_QF/discards/""$line""_MiFish.under140bp" --too-long-output "../01e_trimmed_QF/discards/""$line""_MiFish.over260bp" -o "../01e_trimmed_QF/""$line""_MiFish.final.annotated.fastq" "$line""_MiFish.collapsed.AR.annotated.fastq"; done < ../Sample_list.txt

#check for length, quality, and no contamination
cd ../01e_trimmed_QF/
fastqc * -o ../01f_fastqc_trimmed_QF_final_annotated/
cd ../01f_fastqc_trimmed_QF_final_annotated
multiqc .

#Looks great!  they're ready for the next steps now

cd /Users/Eldridge/Desktop/Savannah/NC_Sharks_obitools/2nd_try_demuxed_cleaned
scp -r eldridge@leopardus.snrenet.arizona.edu:/storage/eldridge/NC_Sharks_data/demuxed_primers_w_cutadapt/following_eDNAFlow_w_demuxed_data/01e_trimmed_QF/ .
mkdir 02_obiconvert_to_fasta

while read line; do  
obiconvert --sanger --fasta-output \
"$line""_MiFish.final.annotated.fastq" > "../02_obiconvert_to_fasta/""$line""_MiFish""".fasta""; done < ../Sample_list.txt	

while read line; do  
obiconvert --sanger --fasta-output \
"$line""_BerryCrust.final.annotated.fastq" > "../02_obiconvert_to_fasta/""$line""_BerryCrust""".fasta""; done < ../Sample_list.txt

#11/14/2022 in obitools environment on my new computer in 02_obiconvert_to_fasta directory
#concatenate into one file per primer set and count sequences per sample.
cat *_MiFish.fasta  > MiFish.allsamples.fasta
obistat -c sample -a seq_length MiFish.allsamples.fasta > sample_stats_MiFish.txt 
obisplit -t sample MiFish.allsamples.fasta 
while read line; do  
rm "$line"".fasta"; done < ../Sample_list.txt


cat *_BerryCrust.fasta  > BerryCrust.allsamples.fasta
obistat -c sample -a seq_length BerryCrust.allsamples.fasta > sample_stats_BerryCrust.txt 

**********************
obisplit -t sample BerryCrust.allsamples.fasta 
while read line; do  
rm "$line"".fasta"; done < ../Sample_list.txt


#only keep unique sequences in each sample
for i in *_MiFish.fasta ; do obiuniq $i >  ${i/.fasta/.unique.fasta}; done

#only keep unique sequences in each sample
for i in *_BerryCrust.fasta ; do obiuniq $i >  ${i/.fasta/.unique.fasta}; done


#change from obitools format to vsearch format using owitools scripts
cd ..
mkdir owitools
cd owitools
cp -r ~/Desktop/Metabarcoding_Physalia/ubuntu/owi_tools/ .
chmod 777 *
which RScript 
result on my computer: /usr/local/bin/RScript
copy and paste that into the first line of the owi_script that I want to use
also had to go into RStudio and install.packages("optparse")

#remove chimaeras using vsearch
for i in *_MiFish.unique.fasta ; do ./../owitools/owi_obisample2vsearch -i $i & done
for i in *_MiFish.unique.vsearch.fasta ; do vsearch --uchime_denovo $i --sizeout --minh 0.90 --nonchimeras ${i/.unique.vsearch.fasta/.nonchimeras.fasta} --chimeras ${i/.unique.vsearch.fasta/.chimeras.fasta} --uchimeout ${i/.unique.vsearch.fasta/.uchimeout.txt} & done

for i in *_BerryCrust.unique.fasta ; do ./../owitools/owi_obisample2vsearch -i $i; done
for i in *_BerryCrust.unique.vsearch.fasta ; do vsearch --uchime_denovo $i --sizeout --minh 0.90 --nonchimeras ${i/.unique.vsearch.fasta/.nonchimeras.fasta} --chimeras ${i/.unique.vsearch.fasta/.chimeras.fasta} --uchimeout ${i/.unique.vsearch.fasta/.uchimeout.txt}; done


#Concatenating non chimaeras in a single file
cat  *_MiFish.nonchimeras.fasta > MiFish.nonchimeras.fasta

cat  *_BerryCrust.nonchimeras.fasta > BerryCrust.nonchimeras.fasta


#Returning to obitools format
../owitools/owi_vsearch2obifasta -i MiFish.nonchimeras.fasta
../owitools/owi_vsearch2obifasta -i BerryCrust.nonchimeras.fasta

#Dereplicating sequences in MiFish.nonchimeras.fasta file
obiuniq -m sample MiFish.nonchimeras.vsearch.fasta > MiFish.unique.fasta
obiuniq -m sample BerryCrust.nonchimeras.vsearch.fasta > BerryCrust.unique.fasta

#change names of motus to a short more informative identifier
obiannotate --seq-rank MiFish.unique.fasta | obiannotate --set-identifier '"MiFish_%07d" % seq_rank' > MiFish.new.fasta
obiannotate --seq-rank BerryCrust.unique.fasta | obiannotate --set-identifier '"BerryCrust_%07d" % seq_rank' > BerryCrust.new.fasta


#obtain a table of abundances
obitab -o MiFish.new.fasta >  MiFish.new.tab
obitab -o BerryCrust.new.fasta >  BerryCrust.new.tab

#back to vsearch format
../owitools/owi_obifasta2vsearch -i MiFish.new.fasta -o MiFish.vsearch.fasta
#../owitools/owi_obifasta2vsearch -i BerryCrust.new.fasta -o BerryCrust.vsearch.fasta #not working right
# I copied a new version of owi_obifasta2vsearch from the original folder and modified it to know that the name was the first 18 characters instead of 14 characters for BerryCrust_%07d

#cluster with swarm MiFish
conda activate eDNA
swarm -d 4 -z -t 40 -o MiFish.SWARM4nc_output -s MiFish.SWARM4nc_stats -w MiFish.SWARM4nc_seeds.fasta MiFish.vsearch.fasta
error duplicated sequence identifier: MiFish_0000000

#I could change the number of leading zeros since it only seems to recognize the first 7
obiannotate --seq-rank MiFish.unique.fasta | obiannotate --set-identifier '"MiFish_%07d" % seq_rank' > MiFish.new.fasta

swarm -d 4 -z -t 40 -o MiFish.SWARM4nc_output -s MiFish.SWARM4nc_stats -w MiFish.SWARM4nc_seeds.fasta MiFish.vsearch.fasta

for i in 2 3 5 6 7 8 9 10 11 12 13 14; do
swarm -d $i -z -t 40 -o MiFish.SWARM$inc_output -s MiFish.SWARM$inc_stats -w MiFish.SWARM$inc_seeds.fasta MiFish.vsearch.fasta; done

swarm -d 1 -f -z -t 40 -o MiFish.SWARM1nc_output -s MiFish.SWARM1nc_stats -w MiFish.SWARM1nc_seeds.fasta MiFish.vsearch.fasta
#it appears that the only stats files are the ones I didn't run in the loop

swarm -d 5 -z -t 40 -o MiFish.SWARM5nc_output -s MiFish.SWARM5nc_stats -w MiFish.SWARM5nc_seeds.fasta MiFish.vsearch.fasta; done

#I plotted the number of swarms vs d values in R and it starts to even out at d=5 (713 swarms) so that's what I'll use first


#cluster with swarm :BerryCrust
conda activate eDNA
swarm -d 1 -f -z -t 40 -o BerryCrust.SWARM1nc_output -s BerryCrust.SWARM1nc_stats -w BerryCrust.SWARM1nc_seeds.fasta BerryCrust.vsearch.fasta

Duplicated sequence identifier: BerryCrust_000
#hmm now it seems to want only 3 digits.  I hope (but am pretty sure) that's enough
less BerryCrust.new.fasta
tail BerryCrust.new.fasta #156805 unique sequences
needs at least 6 digits, I'll do 7

obiannotate --seq-rank BerryCrust.unique.fasta | obiannotate --set-identifier '"BerryCrust_%07d" % seq_rank' > BerryCrust.new.fasta
# I copied a new version of owi_obifasta2vsearch from the original folder and modified it to know that the name was the first 18 characters instead of 14 characters for BerryCrust_%07d


swarm -d 2 -z -t 40 -o BerryCrust.SWARM2nc_output -s BerryCrust.SWARM2nc_stats -w BerryCrust.SWARM2nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 3 -z -t 40 -o BerryCrust.SWARM3nc_output -s BerryCrust.SWARM3nc_stats -w BerryCrust.SWARM3nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 4 -z -t 40 -o BerryCrust.SWARM4nc_output -s BerryCrust.SWARM4nc_stats -w BerryCrust.SWARM4nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 5 -z -t 40 -o BerryCrust.SWARM5nc_output -s BerryCrust.SWARM5nc_stats -w BerryCrust.SWARM5nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 6 -z -t 40 -o BerryCrust.SWARM6nc_output -s BerryCrust.SWARM6nc_stats -w BerryCrust.SWARM6nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 7 -z -t 40 -o BerryCrust.SWARM7nc_output -s BerryCrust.SWARM7nc_stats -w BerryCrust.SWARM7nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 8 -z -t 40 -o BerryCrust.SWARM8nc_output -s BerryCrust.SWARM8nc_stats -w BerryCrust.SWARM8nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 9 -z -t 40 -o BerryCrust.SWARM9nc_output -s BerryCrust.SWARM9nc_stats -w BerryCrust.SWARM9nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 10 -z -t 40 -o BerryCrust.SWARM10nc_output -s BerryCrust.SWARM10nc_stats -w BerryCrust.SWARM10nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 11 -z -t 40 -o BerryCrust.SWARM11nc_output -s BerryCrust.SWARM11nc_stats -w BerryCrust.SWARM11nc_seeds.fasta BerryCrust.vsearch.fasta
swarm -d 12 -z -t 40 -o BerryCrust.SWARM12nc_output -s BerryCrust.SWARM12nc_stats -w BerryCrust.SWARM12nc_seeds.fasta BerryCrust.vsearch.fasta



#R-script
#d values for swarm test y=number of swarms MiFish
# x=d-values y=number of swarms
x <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14)
y<- c(5712,3924,1676,977,713,572,485,436,386,360,336,304,260,237)
plot(x,y)
xtrim <-c(3,4,5,6,7,8,9,10,11,12,13,14)
ytrim<-c(1676,977,713,572,485,436,386,360,336,304,260,237)
plot(xtrim,ytrim)


#MiFish
#for swarm d=5
../owitools/owi_recount_swarm MiFish.SWARM5nc_output MiFish.new.tab

../owitools/owi_recount_swarm BerryCrust.SWARM5nc_output BerryCrust.new.tab

#BerryCrust results
Kept only 656 clusters of size greater than or equal to 2 reads.
Reading tabulated database. This could take a while...
Database read including 156805 total different sequences and 157 samples.
Kept only 0 sequences for calculations.         #this is a problem.  It's the same for d=1-12
File BerryCrust.SWARM5nc_output.counts.csv written

#Remove singletons

 ../owitools/owi_vsearch2obifasta -i MiFish.SWARM5nc_seeds.fasta -o MiFish.SWARM5nc_seeds.obi.fasta
obigrep -p 'count>1' MiFish.SWARM5nc_seeds.fasta > MiFish.seeds_nonsingleton.fasta

 ../owitools/owi_vsearch2obifasta -i BerryCrust.SWARM5nc_seeds.fasta -o BerryCrust.SWARM5nc_seeds.obi.fasta
obigrep -p 'count>1' BerryCrust.SWARM5nc_seeds.fasta > BerryCrust.seeds_nonsingleton.fasta
#no nonsingletons left at d=5 swarm

../owitools/owi_recount_swarm BerryCrust.SWARM4nc_output BerryCrust.swarm4.new.tab
# did the same for 1-12, none had any non-singletons left

#so I processed the reads (uniques,non-chimaeras) in dada2 on my computer and exported them to a new fasta file
#then in a new folder Savannah/dada2_to_obi3
obiannotate --seq-rank ASVs_without_bimeras_BerryCrust.fasta | obiannotate --set-identifier '"BerryCrust_%07d" % seq_rank' > BerryCrust.new.fasta
obitab -o BerryCrust.new.fasta >  BerryCrust.new.tab

#took results of dada2 following french Abyss tutorial and tried swarm on them.
on my computer:
conda activate eDNA
conda update swarm
swarm version=3.13
swarm -d 1 -f -z -t 40 -o BerryCrust.dada_SWARM1nc_output -s BerryCrust.dada_SWARM1nc_stats -w BerryCrust.dada_SWARM1nc_seeds.fasta 01e_trimmed_QFBerryCrust_ASVs.fasta
#says it needs the count information in the headers which can be gotten by dereplicating the sequences.  



#put in obi3 for taxonomic assignment
#on leopardus in obitools3 

conda activate obi3
source obi3-env/bin/activate

#make reference database of vertebrates that amplify with these primers following obitools3 tutorial: https://git.metabarcoding.org/obitools/obitools3/-/wikis/Wolf-tutorial-with-the-OBITools3
mkdir EMBL
 cd EMBL

#For MiFish, I only downloaded vertebrates
wget -nH --cut-dirs=6 -A 'STD_VRT*.dat.gz' -R 'STD_HUM*.dat.gz','STD_ENV*.dat.gz' -m -np ftp://ftp.ebi.ac.uk/pub/databases/ena/sequence/snapshot_latest/std/
#this downloaded 4 files

#for BerryCrust, I only downloaded invertebrates (I left in the commands to not include humans or environmental sequences)
#in /storage/eldridge/Database_for_fish_and_crustaceans/obitools/crustaceans_EMBL$ 
wget -nH --cut-dirs=6 -A 'STD_INV*.dat.gz' -R 'STD_HUM*.dat.gz','STD_ENV*.dat.gz' -m -np ftp://ftp.ebi.ac.uk/pub/databases/ena/sequence/snapshot_latest/std/
#this downloaded 9 files

cd ..
conda activate obi3 (on leopardus)
obi import --embl EMBL fish/Miya_refs
obi import --embl EMBL crust/Berry_refs
wget https://ftp.ncbi.nlm.nih.gov/pub/taxonomy/taxdump.tar.gz

obi import --taxdump taxdump.tar.gz fish/taxonomy/my_tax
obi import --taxdump taxdump.tar.gz crust/taxonomy/my_tax


obi ecopcr -e 3 -l 100 -L 260 -F GTCGGTAAAACTCGTGCCAGC -R CATAGTGGGGTATCTAATCCCAGTTTG --taxonomy fish/taxonomy/my_tax fish/Miya_refs fish/Miya_ecopcr_refs
obi grep --require-rank=species --require-rank=genus --require-rank=family --taxonomy fish/taxonomy/my_tax fish/Miya_ecopcr_refs fish/Miya_refs_clean

obi build_ref_db -t 0.97 --taxonomy fish/taxonomy/my_tax fish/Miya_refs_clean fish/Miya_refs_clean_97

 
scp MiFish.seeds_nonsingleton.fasta eldridge@leopardus.snrenet.arizona.edu:/storage/eldridge/Database_for_fish_and_crustaceans/obitools

obi import --nuc MiFish.seeds_nonsingleton.fasta fish/MiFish_swarm5_nucimport

obi ecotag -m 0.97 --taxonomy fish/taxonomy/my_tax -R fish/Miya_refs_clean_97 fish/MiFish_swarm5_nucimport fish/MiFish_swarm5_nucimp_tax_assigned

obi stats -c SCIENTIFIC_NAME fish/MiFish_swarm5_nucimp_tax_assigned

IT WORKED!
#swarm d=5

SCIENTIFIC_NAME                 count   total
None                            207     1569968 
Sphyrna tiburo                  1       534336  
Carcharhinus acronotus          1       457646  
Leiostomus xanthurus            1       339782  
Brevoortia                      1       235799  
Carcharhinus                    1       53850   
Cynoscion regalis               1       43142   
Lagodon rhomboides              1       40346   
Peprilus                        1       27054   
Cynoscion nothus                1       20640   
Symphurus                       1       16119   
Synodus foetens                 1       15738   
Ophichthus gomesii              1       15517   
Myrophis punctatus              1       14285   
Xyrichtys novacula              1       13217   
Chilomycterus schoepfii         1       6734
Sciaenops ocellatus             1       5994
Trichiurus lepturus             1       5742
Hippocampus erectus             1       4567
Stephanolepis                   1       3524
Syngnathus louisianae           1       3229
Paralichthys lethostigma        1       1936
Pleuronectidae                  1       991
Trachinotus                     1       257
Pomatomus saltatrix             1       65
Oncorhynchus                    1       20
Chaetodipterus faber            1       10
Echeneis                        1       8
Lutjanus guttatus               1       7
Thunnus                         1       7
Scomberomorus maculatus         1       7
Sphoeroides parvus              1       6

#now trying other d-values 
mv MiFish.seeds_nonsingleton.fasta MiFish.5seeds_nonsingleton.fasta

#swarm d=4
../owitools/owi_recount_swarm MiFish.SWARM1nc_output MiFish.new.tab
../owitools/owi_vsearch2obifasta -i MiFish.SWARM4nc_seeds.fasta -o MiFish.SWARM4nc_seeds.obi.fasta
obigrep -p 'count>1' MiFish.SWARM4nc_seeds.obi.fasta > MiFish.4seeds_nonsingleton.fasta

scp MiFish.4seeds_nonsingleton.fasta eldridge@leopardus.snrenet.arizona.edu:/storage/eldridge/Database_for_fish_and_crustaceans/obitools
obi import --nuc MiFish.4seeds_nonsingleton.fasta fish/MiFish_swarm4_nosingles
obi ecotag -m 0.97 --taxonomy fish/taxonomy/my_tax -R fish/Miya_refs_clean_97 fish/MiFish_swarm4_nosingles fish/MiFish_swarm4_nosingles_tax_assigned
obi stats -c SCIENTIFIC_NAME fish/MiFish_swarm4_nosingles_tax_assigned

SCIENTIFIC_NAME                 count   total
None                            250     1558082
Sphyrna tiburo                  1       534295
Carcharhinus acronotus          1       460028
Leiostomus xanthurus            1       339807
Brevoortia                      1       235797
Carcharhinus                    2       60265
Cynoscion regalis               1       44243
Lagodon rhomboides              1       40345
Peprilus                        1       27054
Cynoscion nothus                1       22094
Symphurus                       1       16009
Synodus foetens                 1       15738
Ophichthus gomesii              1       15515
Myrophis punctatus              1       14283
Xyrichtys novacula              1       13216
Chilomycterus schoepfii         1       6733
Sciaenops ocellatus             1       6444
Trichiurus lepturus             1       5741
Hippocampus erectus             1       4567
Stephanolepis                   1       3524
Syngnathus louisianae           1       3229
Paralichthys lethostigma        1       1936
Pleuronectidae                  1       991
Trachinotus                     1       257
Pomatomus saltatrix             1       65
Oncorhynchus                    1       20
Chaetodipterus faber            1       10
Echeneis                        1       8
Lutjanus guttatus               1       7
Thunnus                         1       7
Scomberomorus maculatus         1       7
Sphoeroides parvus              1       6

obi align -t 0.95 fish/MiFish_swarm4_nosingles_tax_assigned fish/aligned_swarm4_assigned_sequences

obi export --fasta-output fish/MiFish_swarm4_nosingles_tax_assigned -o NCSharks_MiFish_results.fasta

obi export --tab-output fish/aligned_swarm4_assigned_sequences > NCSharks_MiFish_results.csv

cd /Users/Eldridge/Desktop/Savannah/NC_Sharks_obitools/results
scp eldridge@leopardus.snrenet.arizona.edu:/storage/eldridge/Database_for_fish_and_crustaceans/obitools/NCSharks_MiFish_results* .

#curate with lulu
I decided to use swarm 4 because it resulted in the same number of motus being assigned to only 1 species as 5 did.
cp ../02_obiconvert_to_fasta/MiFish.4seeds_nonsingleton.fasta .
sed -i -e 's/ size=\([0-9]\+\);//g' MiFish.4seeds_nonsingleton.fasta
vsearch --usearch_global ../2nd_try_demuxed_cleaned/02_obiconvert_to_fasta/MiFish.SWARM4nc_seeds.obi.fasta --db ../2nd_try_demuxed_cleaned/02_obiconvert_to_fasta/MiFish.SWARM4nc_seeds.obi.fasta --self --id .84 --iddef 1 --userout MiFish.SWARM4nc_seeds.obi.match_list.txt -userfields query+target+id --maxaccepts 0 --query_cov .9 --maxhits 10


#with this command we are transforming the output.counts.csv from the owi_recount step into a simpler table with only id and the reads/sample, which is the only info that LULU considers. The argument -f 1, A-B, indicates to print only the columns 1 (id) and A-B (samples). You have to substitute A and B for the first and last sample column of your table: if you have 10 samples starting in column 15, then A=15, B=24.

####### A and B must change to the number of the column containing your first sample and last sample respectively#####
cut -d ";" -f1,A-B output_of_recount_swarm.csv > name.counts_LULU.txt && sed -e 's/;/\t/g' name.counts_LULU.txt

cp ../02_obiconvert_to_fasta/MiFish.SWARM4nc_output.counts.csv .
#opened in excel and inserted a row to count the columns.a=4,B=160
cut -d ";" -f1,4-160 MiFish.SWARM4nc_output.counts.csv > MiFish.SWARM4.counts_LULU.txt && sed -i -e 's/;/\t/g' MiFish.SWARM4.counts_LULU.txt
#worked!

#now for lulu in R  to curate read counts

> library(lulu)
> matchlist <- read.table("MiFish.SWARM4nc_seeds.obi.match_list.txt", header=FALSE, as.is=TRUE, stringsAsFactors=FALSE)
> otutab <- read.csv("MiFish.SWARM4.counts_LULU.txt", sep='\t', header=TRUE, as.is=TRUE, row.names = 1)
> curated_result <- lulu(otutab, matchlist)
> write.csv(curated_result$curated_table,"MiFish.swarm4.LULU.curated.csv")

#format for MetabaR
formatted the desired 4 tables in Excel.  I used MiFish.swarm4.LULU.curated.csv, and NCSharks_MiFish_results.fasta (from obi3 tax_assigned) and the sample sheet for sequencing and the spreadsheets of the sample info(both sampling and lab)

I created the table PCRs by looking at the soil_euk example data and filling in the information from the sample sheet for sequencing
I created a new column in pcrs for sample_id and made it Shark# with the number corresponding to the NC fecal swab number when available and made new Shark#s for unmatched stomachs.  I put these in the Stomach Content Data table that Savannah sent me and put it in the shared google drive
I created another new column in pcrs for material and named them either fecal, stomach, or negative
I added columns for type sample or control and control_type the controls in this experiment were all PCR negatives
I changed IJKMNP of plate 2 (which were the names of the adapters, to ABCDEF)

I sorted Motus and Reads by Motu# order then copied and pasted reads (number of reads of each motu in each sample from LULU curated swarm4 file)
into a new excel sheet but used paste-special, transpose to get it so that the samples were columns and motus were rows.
no first cell label on either of these is needed (don't use one)

Importing caused some issues if the files weren't copied and pasted into new sheets because of empty row or column names/cells at the ends of the data.

Eventually, it worked!


